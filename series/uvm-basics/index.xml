<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UVM Basics on Techiedeepdive</title>
    <link>/series/uvm-basics/</link>
    <description>Recent content in UVM Basics on Techiedeepdive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 16 Aug 2020 00:54:35 +0200</lastBuildDate><atom:link href="/series/uvm-basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UVM Basics - Reporting</title>
      <link>/posts/2020/08/uvm-basics-reporting/</link>
      <pubDate>Sun, 16 Aug 2020 00:54:35 +0200</pubDate>
      
      <guid>/posts/2020/08/uvm-basics-reporting/</guid>
      <description>A previous post went into the UVM Reporting implementation, But i thought UVM reporting is important enough topic to have overview.
UVM Reporting UVM Reporting Macros provide 4 severity level Info, Warning, Error,Fatal
`uvm_info `uvm_warning `uvm_error `uvm_fatal `uvm_info_context `uvm_warning_context `uvm_error_context `uvm_fatal_context starting with uvm_info,
`uvm_info(ID,MSG,VERBOSITY) ID: Unique string for the message. MSG: message string VERBOSITY:
Hello world `include &amp;#34;uvm_macros.svh&amp;#34; import uvm_pkg::*; class test extends uvm_test; `uvm_component_utils(test) function new(string name=&amp;#34;&amp;#34;, uvm_component parent); super.</description>
    </item>
    
  </channel>
</rss>
