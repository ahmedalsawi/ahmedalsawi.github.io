<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Formal on Techiedeepdive</title>
    <link>/tags/formal/</link>
    <description>Recent content in Formal on Techiedeepdive</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 28 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/formal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Formal - hw-cbmc : Open source formal verification tool</title>
      <link>/posts/2025/06/formal-hw-cbmc-open-source-formal-verification-tool/</link>
      <pubDate>Sat, 28 Jun 2025 00:00:00 +0000</pubDate>
      <guid>/posts/2025/06/formal-hw-cbmc-open-source-formal-verification-tool/</guid>
      <description>&lt;p&gt;Formal verification is a vast and interesting topic. One of the biggest issues is tools to support SVA. I recently found &lt;code&gt;hw-cbmc&lt;/code&gt;, an open source tool to run SVA or SMV on Verilog. This is a deep dive into &lt;code&gt;hw-cbmc&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;hello-world&#34;&gt;&#xA;  Hello World&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#hello-world&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This is a summary of commands to build &lt;code&gt;hw-cbmc&lt;/code&gt;. This is based on COMPILING.md and Dockerfile.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install g++ gcc flex bison make git curl patch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/diffblue/hw-cbmc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule init; git submodule update&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make -C lib/cbmc/src minisat2-download&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make -C src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To run hello world, &lt;code&gt;ebmc&lt;/code&gt; is called with &lt;code&gt;--top&lt;/code&gt; and &lt;code&gt;--bound&lt;/code&gt; with 3.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My assumptions (pun intended) about SymbiYosys - part1 </title>
      <link>/posts/2022/05/my-assumptions-pun-intended-about-symbiyosys-part1/</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      <guid>/posts/2022/05/my-assumptions-pun-intended-about-symbiyosys-part1/</guid>
      <description>&lt;p&gt;I wanted to try yosys for long time. I played around with SAT solvers before but didn&amp;rsquo;t try full-blown formal proof before. I thought formal is complex to do. Finally, I proved myself wrong (again, pun intended).&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;SymbiYosys&lt;/code&gt; is open source formal engine based on Yosys. It&amp;rsquo;s easy and most importantly it&amp;rsquo;s free.&lt;/p&gt;&#xA;&lt;h1 id=&#34;installation&#34;&gt;&#xA;  Installation&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#installation&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This is summary for steps in &lt;a href=&#34;https://symbiyosys.readthedocs.io/en/latest/install.html&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official doc&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;One caveat, installation requires root to copy scripts. I don&amp;rsquo;t like running script with sudo on my machine, so i used docker and i am good to go.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
