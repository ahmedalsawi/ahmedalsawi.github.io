<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xilinx on Techiedeepdive</title>
    <link>/tags/xilinx/</link>
    <description>Recent content in Xilinx on Techiedeepdive</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 28 May 2020 20:14:08 +0200</lastBuildDate>
    <atom:link href="/tags/xilinx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Xilinx Vivado - Part1 The Flow</title>
      <link>/posts/2020/05/xilinx-vivado-part1-the-flow/</link>
      <pubDate>Thu, 28 May 2020 20:14:08 +0200</pubDate>
      <guid>/posts/2020/05/xilinx-vivado-part1-the-flow/</guid>
      <description>&lt;p&gt;This post explains the simple vivado non-project flow for synthesis and implementation. The advantage of non-project mode is full control over the flow and reports generated. Note that non-project runs in-memory (no file generated).So, It does need some extra work to create checkpoints and reports as needed.&lt;/p&gt;&#xA;&lt;h1 id=&#34;invoking-vivado&#34;&gt;&#xA;  Invoking Vivado&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#invoking-vivado&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;vivado takes &lt;code&gt;-mode&lt;/code&gt; as one of &lt;code&gt;gui, tcl, batch&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;gui: default. start vivado in gui mode&lt;/li&gt;&#xA;&lt;li&gt;tcl: starts vivado in tcl (interactive mode)&lt;/li&gt;&#xA;&lt;li&gt;batch: starts vivado and exit after executing commands (regression mode)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Also, &lt;code&gt;-source run.tcl&lt;/code&gt; is used to run &lt;code&gt;run.tcl&lt;/code&gt; after init. I like to use &lt;code&gt;-nojournal -nolog&lt;/code&gt; to get rid of annoying log and journal files.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
