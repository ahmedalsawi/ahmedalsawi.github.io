<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chess on Techiedeepdive</title>
    <link>/tags/chess/</link>
    <description>Recent content in Chess on Techiedeepdive</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 20 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/chess/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chess Linux clients</title>
      <link>/posts/2025/07/chess-linux-clients/</link>
      <pubDate>Sun, 20 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/posts/2025/07/chess-linux-clients/</guid>
      <description>&lt;p&gt;This is a quick writeup about chess GUI clients.  All clients can use UCI eninge (stockfish) for move evaluation but they have to keep board state and GUI interactions.&lt;/p&gt;&#xA;&lt;p&gt;TLDR; I like pychess the most but chessx seems have to most features which means it is most complicated.&lt;/p&gt;&#xA;&lt;h1 id=&#34;stockfish&#34;&gt;&#xA;  Stockfish&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#stockfish&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Stockfish is an open-source chess engine used by several chess websites such as Chess.com. from their github page:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python-chess: Chess library for fun</title>
      <link>/posts/2025/07/python-chess-chess-library-for-fun/</link>
      <pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/posts/2025/07/python-chess-chess-library-for-fun/</guid>
      <description>&lt;p&gt;I recently got into chess and thought it would be fun to look at chess programming while i am it. This post is about &lt;code&gt;python-chess&lt;/code&gt; library which provides data structures and APIs for chess board.&lt;/p&gt;&#xA;&lt;h1 id=&#34;board&#34;&gt;&#xA;  Board&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#board&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;The standard board positions is represented with &lt;code&gt;Forsythâ€“Edwards Notation&lt;/code&gt; or &lt;code&gt;FEN&lt;/code&gt;. The main class is &lt;code&gt;Board&lt;/code&gt; which have the initial FEN as show below.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Piece placement data: Each rank is described, starting with rank 8 and ending with rank 1, with a &amp;ldquo;/&amp;rdquo; between each one; within each rank, the contents of the squares are described in order from the a-file to the h-file. Each piece is identified by a single letter taken from the standard English names in algebraic notation (pawn = &amp;ldquo;P&amp;rdquo;, knight = &amp;ldquo;N&amp;rdquo;, bishop = &amp;ldquo;B&amp;rdquo;, rook = &amp;ldquo;R&amp;rdquo;, queen = &amp;ldquo;Q&amp;rdquo; and king = &amp;ldquo;K&amp;rdquo;). White pieces are designated using uppercase letters (&amp;ldquo;PNBRQK&amp;rdquo;), while black pieces use lowercase letters (&amp;ldquo;pnbrqk&amp;rdquo;). A set of one or more consecutive empty squares within a rank is denoted by a digit from &amp;ldquo;1&amp;rdquo; to &amp;ldquo;8&amp;rdquo;, corresponding to the number of squares.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
