<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithms on Techiedeepdive</title>
    <link>/tags/algorithms/</link>
    <description>Recent content in algorithms on Techiedeepdive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 16 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/algorithms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Longest common sequence</title>
      <link>/posts/2022/10/longest-common-sequence/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/10/longest-common-sequence/</guid>
      <description>In previous post, I wrote about Levenshtein distance which is a good distance metric for sequences with different length. This post is about Longest common sub sequence (LCS)
 The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).
 The thing about LCS is that the common subsequence is not consecutive positions within the sequences.</description>
    </item>
    
    <item>
      <title>Levenshtein Distance</title>
      <link>/posts/2022/05/levenshtein-distance/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/05/levenshtein-distance/</guid>
      <description>Levenshtein distance defines the distance between strings. It is used for spell checking and suggestions (among other applications). It is interesting as it reminded me of Hamming distance (I am looking at you, undergrad information theory course!) which led me the rabbit hole of string distance functions.
Well, wiki says it all
 In information theory, linguistics, and computer science, the Levenshtein distance is a string metric for measuring the difference between two sequences.</description>
    </item>
    
    <item>
      <title>Simple recursive solution to Maze path finding</title>
      <link>/posts/2022/05/simple-recursive-solution-to-maze-path-finding/</link>
      <pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/05/simple-recursive-solution-to-maze-path-finding/</guid>
      <description>Maze path finding is an interesting problem to find if there path(and the path) between start and dest points on grid. More details on wiki. There many solutions some of them are more complicate than others. I am looking at backtracking or A* search. Normally simple solution is model the grid (open cells) as graph nodes and try to find shorted path between two nodes.
In this instance of this problem, there is an extra requirement.</description>
    </item>
    
    <item>
      <title>Percolation Union find</title>
      <link>/posts/2020/05/percolation-union-find/</link>
      <pubDate>Tue, 26 May 2020 18:08:00 +0200</pubDate>
      
      <guid>/posts/2020/05/percolation-union-find/</guid>
      <description>Wiki says that Percolation is
 refers to the movement and filtering of fluids through porous materials
 To put this in CS/Math terms:
 Starting with N*N grid with and open and closed cells, is there a path from top row to bottom row?
 This is an example from link that shows how system percolates or not. Percolation is a problem that shows up in chemistry and physics. Also, in network connectivity or Maze connectivity.</description>
    </item>
    
    <item>
      <title>Sudoku SAT Solution</title>
      <link>/posts/2020/05/sudoku-sat-solution/</link>
      <pubDate>Sun, 24 May 2020 20:49:37 +0200</pubDate>
      
      <guid>/posts/2020/05/sudoku-sat-solution/</guid>
      <description>This one is about two things Sudoku and SAT (obviously!). Let&amp;rsquo;s start with definitions:
Sudoku Sudoku is a puzzle with the objective to fill 9x9 grid with numbers between 1 and 9. There are few rules
 All cells must have one number between 1 and 9 Rows and columns must contain unique numbers 1 to 9 (no repeated digits) each 3x3 sub-grid (AKA box) must contain unique numbers 1 to 9 (to repeated digits)  Check out the wiki</description>
    </item>
    
  </channel>
</rss>
