<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coverage on Techiedeepdive</title>
    <link>/tags/coverage/</link>
    <description>Recent content in coverage on Techiedeepdive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 25 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/coverage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Systemverilog functional cheat-sheet</title>
      <link>/posts/2022/04/systemverilog-functional-cheat-sheet/</link>
      <pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/04/systemverilog-functional-cheat-sheet/</guid>
      <description>basic enum {r,d} color,color1; covergroup cg @(posedge clk); cp : coverpoint color; cp1 : coverpoint color1; xp : cross cp, cp; endgroup cg cg_i = new; embedded coverpoint class foo; enum {r,d} color,color1; covergroup cg @(posedge clk); cp : coverpoint color; cp1 : coverpoint color1; xp : cross cp, cp; endgroup function new(); cg =new; // embedded cg above instance is created automatically as cg is defined in class endfunction endclass implicit coverpoint color1 in cross create a coverpoint there.</description>
    </item>
    
    <item>
      <title>Abridged guide to Systemverilog Functional coverage</title>
      <link>/posts/2020/12/abridged-guide-to-systemverilog-functional-coverage/</link>
      <pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/2020/12/abridged-guide-to-systemverilog-functional-coverage/</guid>
      <description>Coverage is big part of &amp;ldquo;CRV&amp;rdquo; (constrained random verification). If randomization answers the question &amp;ldquo;does it work?&amp;rdquo;, Something needs to say when to stop &amp;ldquo;randomizing&amp;rdquo; and answer the question &amp;ldquo;are done?&amp;rdquo;.
SV Standard define combine several Semantics languages (mixed bag) for OOP, SVA, Randomization and most importantly Functional Coverage. This is small(or abridged if you like fancy words) intro to Coverage semantics. So, LRM reading is a must to understand all features and details about functional coverage semantics.</description>
    </item>
    
  </channel>
</rss>
