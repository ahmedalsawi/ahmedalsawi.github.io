<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Usb on Techiedeepdive</title>
    <link>/tags/usb/</link>
    <description>Recent content in Usb on Techiedeepdive</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 22 Dec 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/usb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TP-Link TL-WN722N adapter - Linux driver - Part1</title>
      <link>/posts/2022/12/tp-link-tl-wn722n-adapter-linux-driver-part1/</link>
      <pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate>
      <guid>/posts/2022/12/tp-link-tl-wn722n-adapter-linux-driver-part1/</guid>
      <description>&lt;p&gt;This is the first post in a series about TP-link TL-WN722N wifi adapter. it&amp;rsquo;s a cool little gadget that provides wifi over USB. This post is about usb registration from the linux driver.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s dive into the deep end which is the USB driver.The usb interface would eventually register network device and cfg80211 devices for ioctl&lt;/p&gt;&#xA;&lt;p&gt;starting with entry point in the driver&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d2a8ff;font-weight:bold&#34;&gt;module_init&lt;/span&gt;(rtw_drv_entry);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d2a8ff;font-weight:bold&#34;&gt;module_exit&lt;/span&gt;(rtw_drv_halt);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;rtw_drv_entry&lt;/code&gt; calls &lt;code&gt;usb_register&lt;/code&gt; to register this driver (short and sweet).&lt;/p&gt;</description>
    </item>
    <item>
      <title>libusb Hello-World</title>
      <link>/posts/2021/12/libusb-hello-world/</link>
      <pubDate>Sat, 25 Dec 2021 00:00:00 +0000</pubDate>
      <guid>/posts/2021/12/libusb-hello-world/</guid>
      <description>&lt;p&gt;I first heard about libusb back in 2011 when I was working on USRP1. At the time, USRP had a really good C++ abstraction library called UHD, which did the heavy lifting talking to libusb. Hopefully, it takes me less than a decade to do a second example.&lt;/p&gt;&#xA;&lt;h1 id=&#34;what-is-libusb&#34;&gt;&#xA;  What is libusb?&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#what-is-libusb&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://libusb.info/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;libusb website&lt;/a&gt; says it all&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;libusb is a C library that provides generic access to USB devices. It is intended to be used by developers to facilitate the production of applications that communicate with USB hardware.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
