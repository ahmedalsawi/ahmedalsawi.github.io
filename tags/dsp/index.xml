<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DSP on Techiedeepdive</title>
    <link>/tags/dsp/</link>
    <description>Recent content in DSP on Techiedeepdive</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 19 Jun 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/dsp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RGB to YCbCr and DCT/IDCT effects</title>
      <link>/posts/2022/06/rgb-to-ycbcr-and-dct/idct-effects/</link>
      <pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate>
      <guid>/posts/2022/06/rgb-to-ycbcr-and-dct/idct-effects/</guid>
      <description>&lt;p&gt;I started this post with a attempt to show the difference between RGB and YCbCr. but that was easy enough so i added one round of dct/idct to see the effects on grey scale(if any).&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading&#34;&gt;&#xA;  &#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#heading&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;The main difference between RGB and YCbCr is that instead using Red/green/blue, YCbCr is using gray(luminance) and Red/Blue differences. It&amp;rsquo;s mainly due to the fact human eye detects gray scale better than color scale which allows more aggressive compression for color components.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Discrete Fourier Transform - DFT</title>
      <link>/posts/2022/06/discrete-fourier-transform-dft/</link>
      <pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate>
      <guid>/posts/2022/06/discrete-fourier-transform-dft/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Discrete_Fourier_transform&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DFT&lt;/a&gt; is one of most important transformation ever invented.It&amp;rsquo;s used in almost every application(compression, filters, etc). From wiki,&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;In mathematics, the discrete Fourier transform (DFT) converts a finite sequence of equally-spaced samples of a function into a same-length sequence of equally-spaced samples of the discrete-time Fourier transform (DTFT), which is a complex-valued function of frequency.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Basically, FT represents sum of basis frequencies (2&lt;em&gt;pi&lt;/em&gt;k/N) scaled with coefficients. DFT calculates these coefficients using the following equation&lt;/p&gt;</description>
    </item>
    <item>
      <title>Discrete Cosine Transform - DCT</title>
      <link>/posts/2022/06/discrete-cosine-transform-dct/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      <guid>/posts/2022/06/discrete-cosine-transform-dct/</guid>
      <description>&lt;p&gt;DCT is frequency domain transform with cosine frequencies. &lt;a href=&#34;https://en.wikipedia.org/wiki/Discrete_cosine_transform&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wiki&lt;/a&gt; says it all:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A discrete cosine transform (DCT) expresses a finite sequence of data points in terms of a sum of cosine functions oscillating at different frequencies&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;The equation to calculate &lt;code&gt;g[u][v]&lt;/code&gt; DCT coefficients  for 8x8 matrix (used for JPEG).&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;/dct-eq.png&#34; alt=&#34;Example image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Brute force calculation can be done with next loops. It sure can be better with caching &lt;code&gt;cosine&lt;/code&gt; multiplication or better butterfly implementation.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
