<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Games on Techiedeepdive</title>
    <link>/tags/games/</link>
    <description>Recent content in Games on Techiedeepdive</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 05 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/games/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python-chess: Chess library for fun</title>
      <link>/posts/2025/07/python-chess-chess-library-for-fun/</link>
      <pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/posts/2025/07/python-chess-chess-library-for-fun/</guid>
      <description>&lt;p&gt;I recently got into chess and thought it would be fun to look at chess programming while i am it. This post is about &lt;code&gt;python-chess&lt;/code&gt; library which provides data structures and APIs for chess board.&lt;/p&gt;&#xA;&lt;h1 id=&#34;board&#34;&gt;&#xA;  Board&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#board&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;The standard board positions is represented with &lt;code&gt;Forsythâ€“Edwards Notation&lt;/code&gt; or &lt;code&gt;FEN&lt;/code&gt;. The main class is &lt;code&gt;Board&lt;/code&gt; which have the initial FEN as show below.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Piece placement data: Each rank is described, starting with rank 8 and ending with rank 1, with a &amp;ldquo;/&amp;rdquo; between each one; within each rank, the contents of the squares are described in order from the a-file to the h-file. Each piece is identified by a single letter taken from the standard English names in algebraic notation (pawn = &amp;ldquo;P&amp;rdquo;, knight = &amp;ldquo;N&amp;rdquo;, bishop = &amp;ldquo;B&amp;rdquo;, rook = &amp;ldquo;R&amp;rdquo;, queen = &amp;ldquo;Q&amp;rdquo; and king = &amp;ldquo;K&amp;rdquo;). White pieces are designated using uppercase letters (&amp;ldquo;PNBRQK&amp;rdquo;), while black pieces use lowercase letters (&amp;ldquo;pnbrqk&amp;rdquo;). A set of one or more consecutive empty squares within a rank is denoted by a digit from &amp;ldquo;1&amp;rdquo; to &amp;ldquo;8&amp;rdquo;, corresponding to the number of squares.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Langton Ant game</title>
      <link>/posts/2021/12/langton-ant-game/</link>
      <pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate>
      <guid>/posts/2021/12/langton-ant-game/</guid>
      <description>&lt;p&gt;This is post is about &lt;a href=&#34;https://en.wikipedia.org/wiki/Langton%27s_ant&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Langton&amp;rsquo;s ant&lt;/a&gt;. Like&#xA;&lt;a href=&#34;/posts/2020/05/conway-game-of-life/&#34; &gt;Conway&amp;rsquo;s game of life&lt;/a&gt;, It&amp;rsquo;s considered &lt;code&gt;Cellular automaton&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A cellular automaton consists of a regular grid of cells, each in one of a finite number of states, such as on and off (in contrast to a coupled map lattice). The grid can be in any finite number of dimensions. For each cell, a set of cells called its neighborhood is defined relative to the specified cell. An initial state (time t = 0) is selected by assigning a state for each cell. A new generation is created (advancing t by 1), according to some fixed rule (generally, a mathematical function)[3] that determines the new state of each cell in terms of the current state of the cell and the states of the cells in its neighborhood.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Conway Game of Life</title>
      <link>/posts/2020/05/conway-game-of-life/</link>
      <pubDate>Sat, 23 May 2020 15:23:40 +0200</pubDate>
      <guid>/posts/2020/05/conway-game-of-life/</guid>
      <description>&lt;p&gt;Conway&amp;rsquo;s Game of Life is a zero-player game introduced by the mathematician John Horton Conway in 1970. Well, It has it&amp;rsquo;s own &lt;a href=&#34;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wiki&lt;/a&gt; and all.&lt;/p&gt;&#xA;&lt;p&gt;The rules are simple. You start with a grid of cells with initial state of either living or dead. Cells interact with neighbors to define the next generation of cells.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Any live cell with fewer than two live neighbors dies, as if by under-population.&lt;/li&gt;&#xA;&lt;li&gt;Any live cell with two or three live neighbors lives on to the next generation.&lt;/li&gt;&#xA;&lt;li&gt;Any live cell with more than three live neighbors dies, as if by overpopulation.&lt;/li&gt;&#xA;&lt;li&gt;Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;implementation&#34;&gt;&#xA;  Implementation&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#implementation&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;It&amp;rsquo;s using the following packages&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
