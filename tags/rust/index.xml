<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust on Techiedeepdive</title>
    <link>/tags/rust/</link>
    <description>Recent content in rust on Techiedeepdive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 27 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>rustlang - Hello world</title>
      <link>/posts/2020/12/rustlang-hello-world/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/2020/12/rustlang-hello-world/</guid>
      <description>Cargo  Link to heading   cargo package manager can be used to create standard structure for rust application.
cargo ini To build
cargo build To build opt binary:
cargo build --release We can build and run binary with
cargo run Creating first rust module  Link to heading   To create a module, create file under src/. For this example, the module name is print.rs
pub fn run(){ println!</description>
    </item>
    
  </channel>
</rss>
