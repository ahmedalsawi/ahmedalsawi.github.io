<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Info-Theory on Techiedeepdive</title>
    <link>/tags/info-theory/</link>
    <description>Recent content in Info-Theory on Techiedeepdive</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 18 Jun 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/info-theory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arithmetic Coding</title>
      <link>/posts/2022/06/arithmetic-coding/</link>
      <pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate>
      <guid>/posts/2022/06/arithmetic-coding/</guid>
      <description>&lt;p&gt;In previous post, I wrote quick post about Huffman Coding. Apparently, Arithmetic Coding is replaces Huffman. It&amp;rsquo;s optional in MPEG and it&amp;rsquo;s part VP9 specs.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Arithmetic_coding&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wiki&lt;/a&gt; describes it as&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Arithmetic coding (AC) is a form of entropy encoding used in lossless data compression.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;The encoding works by sending a value in range of probability &lt;code&gt;[0,1]&lt;/code&gt;(as fixed-point). Basically, It is decision tree on steroids. I really like the diagram on the wiki.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Huffman Coding</title>
      <link>/posts/2022/06/huffman-coding/</link>
      <pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate>
      <guid>/posts/2022/06/huffman-coding/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Huffman_coding&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Huffman code&lt;/a&gt; is one of the lossless compression algos. The idea is using a coding where more frequent symbols have shorter encoding and less frequent symbols with longer encoding(variable length encoding).  A variant of Huffman is used for JPEG standard, so apparently it&amp;rsquo;s a big deal.&lt;/p&gt;&#xA;&lt;p&gt;The simple algorithm on wiki is described as follows:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Create a leaf node for each symbol and add it to the priority queue.&#xA;While there is more than one node in the queue:&#xA;Remove the two nodes of highest priority (lowest probability) from the queue&#xA;Create a new internal node with these two nodes as children and with probability equal to the sum of the two nodes&amp;rsquo; probabilities.&#xA;Add the new node to the queue.&#xA;The remaining node is the root node and the tree is complete.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
