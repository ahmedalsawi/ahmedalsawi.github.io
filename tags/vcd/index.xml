<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VCD on Techiedeepdive</title>
    <link>/tags/vcd/</link>
    <description>Recent content in VCD on Techiedeepdive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 21 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/vcd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python package of the week: vcdvcd</title>
      <link>/posts/2022/08/python-package-of-the-week-vcdvcd/</link>
      <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/08/python-package-of-the-week-vcdvcd/</guid>
      <description>This post is about VCD parsing library called vcdvcd. It&amp;rsquo;s great way to load up vcd and do some processing instead of losing my mind looking at gtkwave. Honestly, The API documentation is not that great but there is an examples.py which helped a little.
So, I wrote this example which should be good enough to get started. It iterates the design hierarchy and gets tv (time and value) tuples for each signal.</description>
    </item>
    
  </channel>
</rss>
