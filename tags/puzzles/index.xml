<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>puzzles on Techiedeepdive</title>
    <link>/tags/puzzles/</link>
    <description>Recent content in puzzles on Techiedeepdive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 07 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/puzzles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Solving Magic Square using Systemverilog Constraints</title>
      <link>/posts/2022/09/solving-magic-square-using-systemverilog-constraints/</link>
      <pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/09/solving-magic-square-using-systemverilog-constraints/</guid>
      <description>This is probably the last post in this series, at least until i find an interesting problem.
Magic square is an interesting one problem indeed. From wiki:
 In recreational mathematics, a square array of numbers, usually positive integers, is called a magic square if the sums of the numbers in each row, each column, and both main diagonals are the same
 It&amp;rsquo;s interesting because constraints span across rows, columns and diagonals.</description>
    </item>
    
    <item>
      <title>Solving No-three-in-line puzzle using SV constraints</title>
      <link>/posts/2022/09/solving-no-three-in-line-puzzle-using-sv-constraints/</link>
      <pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/09/solving-no-three-in-line-puzzle-using-sv-constraints/</guid>
      <description>Continuing the series on solving puzzles using SV constraints, This post is about no-three-in-line puzzle. From Wiki,
 The no-three-in-line problem in discrete geometry asks how many points can be placed in the NxN grid so that no three points lie on the same line.
 It&amp;rsquo;s nice problem because it&amp;rsquo;s more complicated than n-queen. Why more complicated? mainly because we need to include more than just 2 cells in the constraints.</description>
    </item>
    
    <item>
      <title>Solving N-Queen using Systemverilog Constraints</title>
      <link>/posts/2022/06/solving-n-queen-using-systemverilog-constraints/</link>
      <pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/06/solving-n-queen-using-systemverilog-constraints/</guid>
      <description>This time I will try to solve N-Queen problem using Systemverilog solver constraint. They really need to add systemverilog to leetcode. Kidding! All the cool kids use python these days :).
The Rules are simple:
 Queens can&amp;rsquo;t be on the same rows Queens can&amp;rsquo;t be on the same columns Queens can&amp;rsquo;t be on diagonal (this really expands to +ve and -ve diagonals)  // square can be 0 or 1 (1 means queen) constraint a01 {foreach(grid[i][j]) grid[i][j] inside {[0:1]};} // Each row can have one queen constraint rows {foreach(grid[i][j]) grid[i].</description>
    </item>
    
    <item>
      <title>Solving Sudoku using Systemverilog Constraints</title>
      <link>/posts/2022/06/solving-sudoku-using-systemverilog-constraints/</link>
      <pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/06/solving-sudoku-using-systemverilog-constraints/</guid>
      <description>In previous post, I used python SAT solver to solve sudoku. Naturally, SV constraints are perfect to solve suduko once we figure out the correct constraints.
For Wiki, Sudoku is:
 In classic Sudoku, the objective is to fill a 9 × 9 grid with digits so that each column, each row, and each of the nine 3 × 3 subgrids that compose the grid (also called &amp;ldquo;boxes&amp;rdquo;, &amp;ldquo;blocks&amp;rdquo;, or &amp;ldquo;regions&amp;rdquo;) contain all of the digits from 1 to 9.</description>
    </item>
    
    <item>
      <title>Sudoku SAT Solution</title>
      <link>/posts/2020/05/sudoku-sat-solution/</link>
      <pubDate>Sun, 24 May 2020 20:49:37 +0200</pubDate>
      
      <guid>/posts/2020/05/sudoku-sat-solution/</guid>
      <description>This one is about two things Sudoku and SAT (obviously!). Let&amp;rsquo;s start with definitions:
Sudoku Sudoku is a puzzle with the objective to fill 9x9 grid with numbers between 1 and 9. There are few rules
 All cells must have one number between 1 and 9 Rows and columns must contain unique numbers 1 to 9 (no repeated digits) each 3x3 sub-grid (AKA box) must contain unique numbers 1 to 9 (to repeated digits)  Check out the wiki</description>
    </item>
    
  </channel>
</rss>
