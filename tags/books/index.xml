<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Books on Techiedeepdive</title>
    <link>/tags/books/</link>
    <description>Recent content in Books on Techiedeepdive</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 21 Feb 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/books/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The one books everyone should read</title>
      <link>/posts/2023/02/the-one-books-everyone-should-read/</link>
      <pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/02/the-one-books-everyone-should-read/</guid>
      <description>&lt;p&gt;You may think there is a typo in the title. It is not! This post is about The one book I like the most in each topic. I mean if you have to read just one book in computer Architecture, What would it be?&lt;/p&gt;&#xA;&lt;p&gt;Disclaimer, This is purely personal preference so don&amp;rsquo;t fight me if you don&amp;rsquo;t like these books.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Computer Organization: Digital Design and Computer Architecture, David Harris.&lt;/li&gt;&#xA;&lt;li&gt;Computer Architecture: Computer Architecture: A Quantitative Approach&lt;/li&gt;&#xA;&lt;li&gt;Cryptography: Understanding Cryptography&lt;/li&gt;&#xA;&lt;li&gt;Computer Graphics: Computer Graphics Principles Practice&lt;/li&gt;&#xA;&lt;li&gt;USB: Mindshare&lt;/li&gt;&#xA;&lt;li&gt;PCIE: Again Mindshare&lt;/li&gt;&#xA;&lt;li&gt;Graph Theory: Introduction to Graph Theory&lt;/li&gt;&#xA;&lt;li&gt;Linux Kernel: Understanding The Linux Kernel&lt;/li&gt;&#xA;&lt;li&gt;C : The C programming Language.&lt;/li&gt;&#xA;&lt;li&gt;C++: Modern C++ Design&lt;/li&gt;&#xA;&lt;li&gt;Python: Programming Python&lt;/li&gt;&#xA;&lt;li&gt;Computation Theory: Introduction to the Theory of Computation&lt;/li&gt;&#xA;&lt;li&gt;UVM: Advanced UVM&lt;/li&gt;&#xA;&lt;li&gt;Systemverilog: systemverilog for verification&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Book review - Open Verification Methodology Cookbook</title>
      <link>/posts/2022/05/book-review-open-verification-methodology-cookbook/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      <guid>/posts/2022/05/book-review-open-verification-methodology-cookbook/</guid>
      <description>&lt;p&gt;The Open verification Methodology Cookbook is one my favorite books. I actually bought a hardcover and it&amp;rsquo;s small book so I always bring it with me while i am travelling :).&lt;/p&gt;&#xA;&lt;p&gt;The book starts from very basic introduction to verification, then language features and eventually explaining few of the important features of OVM library. I really like the way it starts with basic non-ovm testbench and build up to OVM based TB. I know what you are thinking, who uses OVM anymore? well, I guess some companies still have legacy codebases.Maybe?!  But the most importantly UVM is not that difference from OVM. Many core concepts are still valid. The components, TLM, phasing, reporting and configuration(well, resource_db not config_db).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reading List</title>
      <link>/reading-list/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      <guid>/reading-list/</guid>
      <description>&lt;h1 id=&#34;2025&#34;&gt;&#xA;  2025&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#2025&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Introduction to Linear Algebra - Gilbert Strang&lt;/li&gt;&#xA;&lt;li&gt;Eleven Kinds of Loneliness - Richard Yates&lt;/li&gt;&#xA;&lt;li&gt;Conspiracy against the human race - Thomas Ligotti&lt;/li&gt;&#xA;&lt;li&gt;Orbital - Samantha Harvey&lt;/li&gt;&#xA;&lt;li&gt;Intermezzo - Sally Rooney&lt;/li&gt;&#xA;&lt;li&gt;Yellowface - R. F. Kuang&lt;/li&gt;&#xA;&lt;li&gt;Evenings and Weekends - Oisin Mckenna&lt;/li&gt;&#xA;&lt;li&gt;Conversation with friends - Sally Rooney&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2024&#34;&gt;&#xA;  2024&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#2024&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Mr Salary - Sally Rooney&lt;/li&gt;&#xA;&lt;li&gt;Beautiful world, where are you - Sally Rooney&lt;/li&gt;&#xA;&lt;li&gt;Normal People - Sally Rooney&lt;/li&gt;&#xA;&lt;li&gt;The Trial - Kafka&lt;/li&gt;&#xA;&lt;li&gt;The Castle - Kafka&lt;/li&gt;&#xA;&lt;li&gt;The Prince - Machiavelli&lt;/li&gt;&#xA;&lt;li&gt;Deep learning with Pytorch&lt;/li&gt;&#xA;&lt;li&gt;OpenGL programming Guide&lt;/li&gt;&#xA;&lt;li&gt;Understanding Cryptography - Christof Paar&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2023&#34;&gt;&#xA;  2023&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#2023&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Fundamentals of Computer Graphics&lt;/li&gt;&#xA;&lt;li&gt;Language Hacking Italian&lt;/li&gt;&#xA;&lt;li&gt;history of philosophy&lt;/li&gt;&#xA;&lt;li&gt;Reflection on the Guillotine - Albert Camus&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2022&#34;&gt;&#xA;  2022&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#2022&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;USB System Architecture - Mindshare Inc, Don Anderson&lt;/li&gt;&#xA;&lt;li&gt;The Cathedral and Bazaar &amp;ndash; Reread.&lt;/li&gt;&#xA;&lt;li&gt;A Little History of Philosophy&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2021&#34;&gt;&#xA;  2021&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#2021&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Fluent Python&lt;/li&gt;&#xA;&lt;li&gt;Pride and Prejudice &amp;ndash; Reread&lt;/li&gt;&#xA;&lt;li&gt;Philosophy: The Great Thinkers&lt;/li&gt;&#xA;&lt;li&gt;Python cookbook&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2020&#34;&gt;&#xA;  2020&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#2020&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Learn to earn - Peter Lynch&lt;/li&gt;&#xA;&lt;li&gt;Assertions and Functional coverage By Ashok Mehta&lt;/li&gt;&#xA;&lt;li&gt;Computer organization and design&lt;/li&gt;&#xA;&lt;li&gt;FPGA Prototyping by Verilog Examples: Xilinx Spartan-3 Version. &amp;ndash; Reread&lt;/li&gt;&#xA;&lt;li&gt;Advance ASIC chip synthesis by Himanshu Bhatnagar.&lt;/li&gt;&#xA;&lt;li&gt;SystemC: From the Ground Up by Black, D.C., Donovan, J., Bunton, B., Keist, A.&lt;/li&gt;&#xA;&lt;li&gt;Digital Design and Computer Architecture by David Harris and Sarah Harris.&lt;/li&gt;&#xA;&lt;li&gt;Open Verification Methodology Cookbook by Mark Glasser.&lt;/li&gt;&#xA;&lt;li&gt;Hardware Verification With Systemverilog By Mintz and Ekendahl.&lt;/li&gt;&#xA;&lt;li&gt;Systemverilog For Verification By Spear.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title> Book review - The Pragmatic Programmer</title>
      <link>/posts/2019/08/book-review-the-pragmatic-programmer/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/posts/2019/08/book-review-the-pragmatic-programmer/</guid>
      <description>&lt;p&gt;The Pragmatic Programmer is a small book about the best practices to be a &amp;ldquo;Pragmatic&amp;rdquo; Programmer. It talks about handling software projects with large teams, changing requirements and complex environments.&lt;/p&gt;&#xA;&lt;p&gt;I liked the first chapter where it goes through the philosophy of &lt;em&gt;pragmatic engineers&lt;/em&gt;. I have been following these practices for years but i haven&amp;rsquo;t see them actually written somewhere. things, like investing in personal portofolio, are the best investment an engineer can do. well, They apply to any field not just engineering.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
