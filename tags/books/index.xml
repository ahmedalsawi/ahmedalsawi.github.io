<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Books on Techiedeepdive</title>
    <link>/tags/books/</link>
    <description>Recent content in Books on Techiedeepdive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 09 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="/tags/books/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Graphics - Book notes- 3-D Computer Graphics A Mathematical Introduction</title>
      <link>/posts/2024/11/graphics-book-notes-3-d-computer-graphics-a-mathematical-introduction/</link>
      <pubDate>Sat, 09 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/2024/11/graphics-book-notes-3-d-computer-graphics-a-mathematical-introduction/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The one books everyone should read</title>
      <link>/posts/2023/02/the-one-books-everyone-should-read/</link>
      <pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/2023/02/the-one-books-everyone-should-read/</guid>
      <description>You may think there is a typo in the title. It is not! This post is about The one book I like the most in each topic. I mean if you have to read just one book in computer Architecture, What would it be?
Disclaimer, This is purely personal preference so don&amp;rsquo;t fight me if you don&amp;rsquo;t like these books.
 Computer Organization: Digital Design and Computer Architecture, David Harris. Computer Architecture: Computer Architecture: A Quantitative Approach Cryptography: Understanding Cryptography Computer Graphics: Computer Graphics Principles Practice USB: Mindshare PCIE: Again Mindshare Graph Theory: Introduction to Graph Theory Linux Kernel: Understanding The Linux Kernel C : The C programming Language.</description>
    </item>
    
    <item>
      <title>Book review - Open Verification Methodology Cookbook</title>
      <link>/posts/2022/05/book-review-open-verification-methodology-cookbook/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/05/book-review-open-verification-methodology-cookbook/</guid>
      <description>The Open verification Methodology Cookbook is one my favorite books. I actually bought a hardcover and it&amp;rsquo;s small book so I always bring it with me while i am travelling :).
The book starts from very basic introduction to verification, then language features and eventually explaining few of the important features of OVM library. I really like the way it starts with basic non-ovm testbench and build up to OVM based TB.</description>
    </item>
    
    <item>
      <title>Reading List</title>
      <link>/reading-list/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/reading-list/</guid>
      <description>2024  Link to heading    The Trial - Kafka Deep learning with Pytorch OpenGL programming Guide The Casle - Kafka The prince  2023  Link to heading    Funamentals of Computer Graphics Language Hacking Italian history of philosophy Reflection on the Guillotine - Albert Camus Eleven Kinds of Loneliness - Richard Yates  2022  Link to heading    USB System Architecture - Mindshare Inc, Don Anderson The Cathedral and Bazaar &amp;ndash; Reread.</description>
    </item>
    
    <item>
      <title> Book review - The Pragmatic Programmer</title>
      <link>/posts/2019/08/book-review-the-pragmatic-programmer/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019/08/book-review-the-pragmatic-programmer/</guid>
      <description>The Pragmatic Programmer is a small book about the best practices to be a &amp;ldquo;Pragmatic&amp;rdquo; Programmer. It talks about handling software projects with large teams, changing requirements and complex environments.
I liked the first chapter where it goes through the philosophy of pragmatic engineers. I have been following these practices for years but i haven&amp;rsquo;t see them actually written somewhere. things, like investing in personal portofolio, are the best investment an engineer can do.</description>
    </item>
    
  </channel>
</rss>
