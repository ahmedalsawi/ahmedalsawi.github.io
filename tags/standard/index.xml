<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>standard on Techiedeepdive</title>
    <link>/tags/standard/</link>
    <description>Recent content in standard on Techiedeepdive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 05 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/standard/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PCIE TLP Header python serializer</title>
      <link>/posts/2022/10/pcie-tlp-header-python-serializer/</link>
      <pubDate>Wed, 05 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/10/pcie-tlp-header-python-serializer/</guid>
      <description>I always wanted to write scapy-like framework for PCIE TLP serialization and This is a quick and dirty prototype I wrote at 1 AM. So, Don&amp;rsquo;t judge me.
The final output of the serializer would be as follows. basically, something similar to scapy or wireshark breakdown of header fields.
name:memwr32 size:96 0000000000000000000000100000000000000000100000001100000001111111100000000000000010010000000000000 name:hdr size:32 000000000000000000000010000000000 name:RESERVED size:1 0 name:FMT size:2 00 name:TYPE size:5 00000 name:RESERVED size:1 0 name:TC size:3 000 name:RESERVED size:4 0000 name:TD size:1 0 name:EP size:1 0 name:ATTR size:2 00 name:AT size:2 00 name:LENGTH size:10 10000000000 name:requestID size:16 0000000100000001 name:BUS size:8 00000001 name:DEVICE size:4 0000 name:FUNCTION size:4 0001 name:TAG size:8 10000000 name:LASTDWBE size:4 1111 name:STDWBE size:4 1111 name:ADDR size:32 00000000000000010010000000000000 The PCIE TLP (Tranaction Layer Packet) header depends on type of transaction: Memory, I/O, Configuration, and Messages.</description>
    </item>
    
  </channel>
</rss>
